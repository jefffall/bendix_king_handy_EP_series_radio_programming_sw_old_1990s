1 REM   *********************************************************************
2 REM   *                                                                   *
3 REM   *                  LAND MOBILE RADIO EDITOR                         *
4 REM   *                        IBM VERSION                                *
5 REM   *           COPYRIGHT 1990 KING RADIO CORPORATION                   *
6 VERSION$="VER 1.2"
7 REM   *                                                                   *
8 REM   * USE OF THIS PROGRAM IS LIMITED TO PURCHASERS OF LAA 705 INTERFACE *
9 REM   *********************************************************************
10 OPTION BASE 1 : KEY OFF
15 SCREEN 0,0,0:WIDTH 80
20 DIM FR$(14,2),GD$(14,2),FLD(7) :REM FREQUENCY, GUARD STORAGE (CH #,TX/RX)
30 DIM X$(1),X8$(1),X5$(1),X14$(1),Y$(1) :REM TEMPORARY STRING VARIABLES
40 DIM TITL1$(1),K$(1),XB$(1) :REM MAIN TITLE,K$=VALID KEYS, XB$=...
50 DIM LINEE$(14),FL$(14),LT$(8)
60 DIM L$(1),F$(1),FLAG(64),KEYNAM$(10,5)
70 DIM WD%(64) :DIM WDS(64):REM EEPROM IMAGE STORAGE
80 FFLG=0 :FLAG(2)=0:REM START WITH FAIL FLAG=0 AND NO PRINTER ADDRESS SET
85 DRIVE$="A":REM DEFAULT TO DRIVE 'A'
86 PORT$="COM1:":KEYNAM$(10,1)=" COM2: " : REM DEFAULTS RS232 TO COM1:
90 ON ERROR GOTO  9010 : CLS : GOTO 1010:REM GOTO START
100 :REM***********************************************************************
101 :REM                  CHECK PROPER VALUES
102 :REM****  CHK  ************************************************************
105 LOCATE R,FLD(F) : IF FLAG(4)=1 THEN 140
110 SIZE=5:GOSUB 9610:X5$=XX$: IF MID$(X5$,1,1)="D" THEN 120
115 IF VAL (X5$)>255 THEN 195 ELSE 135:REM THEN BADV ELSE CHK1
118 REM******  CHK0  **********************************************************
120 IF MID$(X5$,5,1)<>" " AND MID$(X5$,5,1)<>"-" THEN 195:REM THEN BADV
125 FOR J=2 TO 4 : IF VAL (MID$(X5$,J,1))>7 THEN 195:REM THEN BADV
130 NEXT J
133 REM*******  CHK1  *********************************************************
135 FLAG (3)=0 : GD$(R-1,1-(F=6))=X5$ : RETURN
138 REM*******  CHK2  *********************************************************
140 SIZE=8:GOSUB 9610:X8$=XX$: Y=VAL (X8$) : Z=FIX(10000*Y-1000*FIX(10*Y)+.5): J=8
145 IF FLAG(6)=1 THEN 160:REM THEN VHF
150 IF Y<400 AND Y<>0 OR Y>= 600 THEN 195:REM THEN BADV
155 IF Z/125<>INT (Z/125) THEN 195 ELSE 170:REM THEN BADV ELSE CUT
158 REM*******  VHF  **********************************************************
160 IF Y<136 AND Y<>0 OR Y>174 THEN 195:REM THEN BADV
165 IF (Z/125<>INT (Z/125)) AND (Z/50<>INT (Z/50)) THEN 195:REM THEN BADV
168 REM*******  CUT  **********************************************************
170 IF J>6 AND (MID$(X8$,J,1)=" " OR MID$(X8$,J,1)="0") THEN MID$(X8$,J,1)=" ":J=J-1 : GOTO 170:REM GOTO CUT
175 IF Z=5 AND MID$(X8$,5,1)=" " THEN MID$(X8$,5,1)="0"
185 LOCATE R,FLD(F) : PRINT X8$;
190 FLAG(3)=0 : FR$(R-1,1-(F=5))=X8$ : RETURN
193 REM*******  BADV  *********************************************************
195 BEEP : GOTO 1510:REM GOTO MAIN2
200 REM       ******************************************
201 REM       *      CONVERT FROM RADIO TO IMAGE       *
202 REM       *            IBM VERSION                 *
203 REM       *                                        *
204 REM       ******************************************
205 REM***********************  CONVT  ****************************************
210 GOSUB 910 : FL$(5)="VHF/VHF" : IF EE THEN FLAG(6)=0 ELSE FLAG(6)=1
215 FL$(6)=" 2 / 14" : IF CC THEN FLAG(7)=0 ELSE FLAG(7)=1
220 FL$(8)=" ON/OFF" : IF ((-32768!) AND WD%(1)) THEN FLAG(9)=0 ELSE FLAG(9)=1
225 FL$(14)=" ON/OFF" : IF (2^4 AND WD%(2)) THEN FLAG(15)=1 ELSE FLAG(15)=0
230 FL$(13)=" ON/OFF" : IF (2^5 AND WD%(2)) THEN FLAG(14)=1 ELSE FLAG(14)=0
235 DTH=WD%(3):GOSUB 9700:DTH1$=DTH$:DTH=WD%(4):GOSUB 9700:FL$(7)=DTH1$+DTH$
237 FL$(7)=RIGHT$(FL$(7),7)+LEFT$(FL$(7),1):FL$(7)=MID$(FL$(7),1,7)
240 FOR I=1 TO 7 : IF MID$(FL$(7),I,1)="F" THEN MID$(FL$(7),I,1)=" "
245 NEXT I :DTH=WD%(2):GOSUB 9700:X5$=DTH$ :XXX$=MID$(X5$,2,1):GOSUB 9800: FL$(9)=MID$(STR$ (15*XXX),2)
246 IF FL$(9)="0" THEN FL$(9)="    OFF":GOTO 255
247 IF LEN(FL$(9))<3 THEN FOR I=1 TO 4-LEN(STR$(VAL(FL$(9)))):FL$(9)=" "+FL$(9):NEXT I
250 FL$(9)=FL$(9)+" SEC"
255 XXX$=MID$(X5$,1,1):GOSUB 9800:FL$(10)=MID$(STR$ (.5*XXX),2) :XXX$=MID$(X5$,4,1):GOSUB 9800: FL$(11)=STR$ (1+XXX)
256 IF FL$(10)=".5" THEN FL$(10)="0.5"
257 IF LEN(FL$(10))=1 THEN FL$(10)=FL$(10)+".0"
258 FL$(10)=FL$(10)+" SEC"
259 FOR I=1 TO 7-LEN(STR$(VAL(FL$(11)))):FL$(11)=" "+FL$(11):NEXT I
260 XXX$=MID$(X5$,3,1):GOSUB 9800:X=FIX (XXX/4) : IF X=0 THEN 270
265 IF X=1 THEN X=3 ELSE X=X-1
270 FL$(12)="      "+CHR$ (65+X)
275 FOR I=1 TO 14 : IF (2^(I-1) AND WD%(1)) THEN FLAG(I+15)=1 ELSE FLAG(I+15)=0
280  OF=5+4*I : IF I<>5 AND I<>6 AND I<>8 AND I<>13 AND I<>14 THEN 295
285       IF FLAG(6) THEN FL$(5)="    VHF" ELSE FL$(5)="    VHF"
286       IF FLAG(7) THEN FL$(6)="      2" ELSE FL$(6)="     14"
287       IF FLAG(9) THEN FL$(8)="     ON" ELSE FL$(8)="    OFF"
288       IF FLAG(14) THEN FL$(13)="     ON" ELSE FL$(13)="    OFF"
289       IF FLAG(15) THEN FL$(14)="     ON" ELSE FL$(14)="    OFF"
295  IF FLAG (6) THEN A=-32768! : B=32767 ELSE A=8 : B=-9
300  FOR J=1 TO 2 : K=OF+2*(J-1)
305   IF WD%(K)=0 THEN FR$(I,J)="  0.0   " : GOTO 365
310   X=WD%(K) : IF (A AND X) THEN FLAG(5)=1 : X=(X AND B) ELSE FLAG(5)=0
315   DTH=X:GOSUB 9700:X5$=DTH$
320   IF FLAG (6) THEN FR$(I,J)="1" ELSE FR$(I,J)=STR$ (4+FLAG (5))
325   FR$(I,J)=FR$(I,J)+MID$(X5$,1,2)+"."+MID$(X5$,3,2)+"  " : FLAG(4)=0 : Y=8
330   IF MID$(X5$,4,1)="C" THEN X=8 : FLAG(4)=1
335   IF MID$(X5$,4,1)="D" THEN X=2 : FLAG(4)=1
340   IF MID$(X5$,4,1)="E" THEN X=6 : FLAG(4)=1
345   IF MID$(X5$,4,1)="F" THEN X=4 : FLAG(4)=1
350   IF FLAG (5) THEN MID$(FR$(I,J),7,1)="5"
355   IF (FLAG(6)-1) OR FLAG(4) THEN MID$(FR$(I,J),6,3)=LT$(X)
360   IF Y>5 AND MID$(FR$(I,J),Y,1)="0" THEN MID$(FR$(I,J),Y,1)=" " : Y=Y-1 : GOTO 360
365  NEXT J
370  FOR J=1 TO 2 : IF J=1 THEN JJ=0 ELSE JJ=1
372  K=OF+J+JJ : IF WD%(K)=0 THEN GD$(I,J)="  0.0" : GOTO 410
375  DTH=WD%(K):GOSUB 9700: X5$=DTH$: IF (-32768! AND WD%(K)) THEN 395
380    IF MID$(X5$,1,1)="0" THEN MID$(X5$,1,1)=" " ELSE 390
385    IF MID$(X5$,2,1)="0" THEN MID$(X5$,2,1)=" "
390    GD$(I,J)=MID$(X5$,1,3)+"."+MID$(X5$,4,1) : GOTO 410
395   A=(WD%(K) AND (2^8+2^7+2^6))/(2^6) :B=(WD%(K) AND (2^5+2^4+2^3))/(2^3)
400   D=(WD%(K) AND (2^2+2^1+1))/(1) : GD$(I,J)="D"+ MID$(STR$(A),2,1) +MID$(STR$(B),2,1) +MID$(STR$(D),2,1)+" "
405 IF (2^14 AND WD%(K)) THEN MID$(GD$(I,J),5,1)="-" ELSE MID$(GD$(I,J),5,1)=" "
410  NEXT J : NEXT I :RETURN
500 REM          **********************************
501 REM          *   CONVERT FROM IMAGE TO RADIO  *
502 REM          *           IBM VERSION          *
503 REM          **********************************
504 REM
509 REM*******  ICNV  *********************************************************
510 GOSUB 9950:IF FLAG(9) THEN WDS(1)=0 ELSE WDS(1)=32768!
511 INPUT "ENABLE USER CODEGUARD (Y/N)?",UCG$: IF NOT (UCG$="Y" OR UCG$="y") THEN 513
512 WDS(1)=WDS(1) + 16384
513 I=1: TEMP$=" "
514 WHILE TEMP$=" "
515     TEMP$=(MID$(FL$(12),I,1)):I=I+1
516 WEND
517 X=ASC(TEMP$)-65:IF X>0 THEN X=X+1
519 GOSUB 910  : IF X>3 THEN X=1:REM GOSUB BP1
520 IF FL$(9)="    OFF" THEN Y=0 ELSE Y=VAL (FL$(9))/15
525 WDS(2)=VAL (FL$(11))-1+16*FLAG (15)+32*FLAG (14)+X*64+256*Y+4096*VAL (FL$(10))/.5
530 WDS(3)=0 : WDS(4)=0 : IF LEN (FL$(7))>6 THEN 540
535  FOR J=LEN (FL$(7)) TO 7 : FL$(7)=FL$(7)+" " : NEXT J
540 FOR I=1 TO 7 : IF I>3 THEN J=4 ELSE J=3
545  IF MID$(FL$(7),I,1)=" " THEN X=15 ELSE X=VAL (MID$(FL$(7),I,1))
550  WDS(J)=WDS(J)+X*16^(3+4*(J-3)-I) : NEXT I
555 FOR I=1 TO 14 : OF=5+4*I : WDS(1)=WDS(1)+FLAG (I+15)*2^(I-1)
560  FOR J=1 TO 2 : K=OF+2*(J-1) : IF VAL (FR$(I,J))=0 THEN WDS(K)=0 : GOTO 620
565   X8$=FR$(I,J) : IF MID$(X8$,6,1)=" " THEN MID$(X8$,6,1)="0"
570   WDS(K)=4096*VAL (MID$(X8$,2,1))+256*VAL (MID$(X8$,3,1))
575   WDS(K)=WDS(K)+16*VAL (MID$(X8$,5,1))+VAL (MID$(X8$,6,1))
580   IF FLAG(6) THEN 600
585    IF MID$(X8$,6,1)>"4" THEN WDS(K)=WDS(K)-1
590    IF MID$(X8$,1,1)="5" THEN WDS(K)=WDS(K)+8
595    GOTO 620
600   IF MID$(X8$,7,1)=" " OR MID$(X8$,7,1)="0" THEN 620
605   IF MID$(X8$,7,1)="5" THEN WDS(K)=WDS(K)+32768! : GOTO 620 ELSE WDS(K)=WDS(K)+32772!
610   IF MID$(X8$,6,1)<"4" THEN WDS(K)=WDS(K)+8 : GOTO 620
615   IF MID$(X8$,6,1)="6" THEN WDS(K)=WDS(K)+4
620  NEXT J
625  FOR J=1 TO 2 :IF J=1 THEN JJ=0 ELSE JJ=1
626   K=OF+J+JJ:X5$=GD$(I,J)
630   FOR Y=1 TO 5 : IF MID$(X5$,Y,1)=" " THEN MID$(X5$,Y,1)="0"
635   NEXT Y : IF MID$(X5$,1,1)="D" THEN WDS(K)=34816! : GOTO 645
640   WDS(K)=4096*VAL (MID$(X5$,1,1))+256*VAL (MID$(X5$,2,1))+16*VAL (MID$(X5$,3,1))+VAL (MID$(X5$,5,1)) : GOTO 655
645  IF MID$(X5$,5,1)="-" THEN WDS(K)=WDS(K)+16384
650  WDS(K)=WDS(K)+64*VAL (MID$(X5$,2,1))+8*VAL (MID$(X5$,3,1))+VAL (MID$(X5$,4,1))
655 NEXT J : NEXT I :GOSUB 9900:RETURN
700 REM            ***************************
701 REM            *   TURN ON (OFF) RS-232  *
702 REM            *        IBM VERSION      *
703 REM            ***************************
704 REM
705 REM********************  HOOK  ********************************************
710 FLAG(3)=0 :OPEN PORT$+"4800,N,8,1,RS" AS #1
720 PB=0 :Q$=CHR$(0):FOR I =1 TO 80:PRINT #1,Q$;:NEXT I
730 PRINT #1, Q$;
740 PRINT #1, CHR$(10);CHR$(20);CHR$(40);CHR$(40);
743 SOUND 30000,1:SOUND 30000,1:SOUND 30000,1:SOUND 30000,1:IF EOF(1) THEN 9009
744 ON ERROR GOTO 746
745 PB=ASC(INPUT$(1,#1)):ON ERROR GOTO 9010:IF NOT EOF(1) THEN 745 ELSE 750
746 RESUME 745
750 PRINT #1, CHR$(40);
755 SOUND 30000,1:SOUND 30000,1:SOUND 30000,1:SOUND 30000,1:IF EOF(1) THEN 9009 ELSE PB=ASC(INPUT$(1,#1))
760 RETURN
770 REM
789 REM*******************  UNHOOK  *******************************************
790 PRINT #1, CHR$(1);:CLOSE #1 : RETURN
799 REM
800 REM           ***************************
801 REM           *   WAIT FOR UP/DOWN LOAD *
802 REM           *     IBM VERSION         *
803 REM           ***************************
804 REM******  WT  ************************************************************
810 CLS : KEY OFF : FOR N=1 TO 10:KEY(N) OFF :KEY N,"": NEXT N
820 COLOR 0,7:IF FLAG (1) THEN PRINT "UPLOADING FROM RADIO USING "+PORT$ ELSE PRINT "DOWNLOADING TO RADIO USING "+PORT$:COLOR 7,0
830 LOCATE 6,1,0 : PRINT "CONNECT RADIO AND THEN PRESS ";:COLOR 0,7:PRINT "  READY   ":COLOR 7,0
835 IF FLAG(1)=0 THEN COLOR 0,7 :PRINT "READYID";:COLOR 7,0:PRINT " WILL RETAIN PRESENT RADIO ID"
840 LOCATE 25,1,0:PRINT USING "#";1;:COLOR 0,7:PRINT KEYNAM$(1,2);:COLOR 7,0:PRINT SPC(1)
841 PRINT USING "#";2;:COLOR 0,7:PRINT KEYNAM$(2,2);:COLOR 7,0:PRINT SPC(1)
842 IF FLAG(1)-1 THEN PRINT USING "#";3;:COLOR 0,7:PRINT KEYNAM$(3,2);:COLOR 7,0:PRINT SPC(1):N=1 ELSE N=0
850 XXX$=INKEY$:IF (XXX$="") OR (LEN(XXX$)<>2) THEN 850 ELSE X=ASC(MID$(XXX$,2,1))-58
855 IF X<1 OR (X>2+N) THEN 850
860 ON X GOTO 870,1310,895
870 LOCATE 11,1
880 IF FLAG (1) THEN PRINT "PRESENTLY UPLOADING USING "+PORT$ ELSE PRINT "PRESENTLY DOWNLOADING USING "+PORT$
885 IF I=200 THEN FLAG(1)=1 ELSE FLAG(1)=0
890 LOCATE ,,0 : RETURN
895 I=200 : GOTO 870
900 REM******  BP1 AND BP  ****************************************************
910 REM THIS WAS BP1
920 SOUND 613062.5/((20+100*RND)*11+134) ,(20*18.2*(134+11*(20+100*RND)))/613062.5 : RETURN
980 REM************************************************************************
990 RETURN :REM USED FOR BAD KEY (LINE 1530)
1000 REM                ***************************
1001 REM                *     START OF PROGRAM    *
1002 REM                *       IBM VERSION       *
1003 REM                ***************************
1004 REM******  START  ********************************************************
1010 FLD(1)=21 : FLD(2)=40 : FLD(3)=44 : FLD(4)=55 : FLD(5)=63
1020 FLD(6)=74 : FLD(7)=82 : FLAG(2)=1 : FLAG(60)=0
1030 LT$(1)="   " : LT$(2)="125" : LT$(3)="25 " : LT$(4)="375"
1040 LT$(5)="5  " : LT$(6)="625" : LT$(7)="75 " : LT$(8)="875"
1050 TITL1$="(C)1985-1990 KING RADIO CORP."
1060 K$=CHR$ (1) : FOR I=2 TO 127 : K$=K$+CHR$ (I) : NEXT I
1070 FOR I=132 TO 155 : K$=K$+CHR$ (I) : NEXT I
1080 FOR I=157 TO 160 : K$=K$+CHR$ (I) : NEXT I
1090 FOR I=163 TO 175 : K$=K$+CHR$ (I) : NEXT I
1100 CLS
1110 FOR I=1 TO 14 : FOR J=1 TO 2
1120 FR$(I,J)="  0.0   " : GD$(I,J)="  0.0"
1130 NEXT J : FLAG(I+15)=0 : NEXT I : FOR I=1 TO 64 : WD%(I)=0 : NEXT I
1150 FOR I=1 TO 4 : LINEE$(I)="" : FL$(I)="" : NEXT I : FL$(1)=""
1145 LINEE$(1)="LMR EDITOR "+VERSION$
1155 LINEE$(2)="RS232 PORT -> "+PORT$
1160 LINEE$(5)="RADIO TYPE" : FL$(5)="    VHF"+" ": FLAG(6)=1
1170 LINEE$(6)="NUMBER OF CHANNELS" : FL$(6)="     14"+" " : FLAG(7)=1
1180 LINEE$(7)="ID NUMBER" : FL$(7)="       "+" "
1190 LINEE$(8)="BATTERY SAVER" : FL$(8)="     ON"+" " :FLAG(9)=1
1200 LINEE$(9)="TX TIME-OUT TIMER" : FL$(9)="    OFF"+" "
1210 LINEE$(10)="SCAN HOLD TIME" : FL$(10)="0.0 SEC"+" "
1220 LINEE$(11)="PRIORITY CHANNEL" : FL$(11)="      1"+" "
1230 LINEE$(12)="PRIORITY MODE" : FL$(12)="      A"+" "
1240 LINEE$(13)="PRI KEY LOCKOUT" : FL$(13)="    OFF"+" " : FLAG(14)=0
1250 LINEE$(14)="ENT/CLR KEY LOCKOUT" : FL$(14)="    OFF"+" " :FLAG(15)=0
1260 KEYNAM$(1,1)="DNLOAD"
1261 KEYNAM$(2,1)="UPLOAD"
1262 KEYNAM$(3,1)=" DISK "
1263 KEYNAM$(4,1)="ADVPRG"
1264 KEYNAM$(5,1)="TONEGD"
1265 KEYNAM$(6,1)="DIGGRD"
1266 KEYNAM$(7,1)=" HELP "
1267 KEYNAM$(8,1)=" EXIT "
1268 KEYNAM$(9,1)=""
1270 KEYNAM$(1,2)=" READY"
1271 KEYNAM$(2,2)=" ABORT"
1272 KEYNAM$(3,2)=" RDYID"
1274 REM***** DISK SOFTKEYS ****************
1275 KEYNAM$(1,3)=" DIR  "
1276 KEYNAM$(2,3)=" LOAD "
1277 KEYNAM$(3,3)=" SAVE "
1278 KEYNAM$(4,3)="DELETE"
1279 KEYNAM$(5,3)=" DRIVE"
1280 KEYNAM$(6,3)=" EDIT "
1281 KEYNAM$(7,3)=" HELP "
1283 REM***** ADVPRG SOFTKEYS **************
1284 KEYNAM$(1,4)=" PRINT"
1285 KEYNAM$(2,4)="OPTION"
1286 KEYNAM$(3,4)=" INIT "
1287 KEYNAM$(4,4)=" EDIT "
1288 KEYNAM$(5,4)=" HELP "
1290 REM***** ERROR SOFTKEYS ***************
1291 KEYNAM$(1,5)=" EDIT "
1300 REM           ******************************
1301 REM           *   OUTPUT IMAGE TO DISPLAY  *
1302 REM           *       IBM VERSION          *
1303 REM           ******************************
1304 REM***  DISPLAY  *********************************************************
1310 SCREEN ,,0:LOCATE 1,1:CLS
1320 COLOR 0,7:PRINT USING "\                            \";TITL1$;:COLOR 7,0
1325 PRINT " ";
1330 PRINT "|CHAN|SCAN| RX FREQ  | RX CG | TX FREQ  | TX CG |";
1340 FOR I=1 TO 14 : F$="" : IF FLAG (I+15) THEN X$="Y" ELSE X$="N"
1341 LINEE$(2)="RS232 PORT -> "+PORT$
1350 PRINT USING "\                 \";LINEE$(I);:PRINT "  ";
1351 PRINT USING "\      \";FL$(I);:PRINT "  ";:PRINT "|";:PRINT USING "###";I;:PRINT " |  ";
1352 PRINT X$;" | ";:PRINT USING "\      \";FR$(I,1);:PRINT " | ";:PRINT USING "\   \";GD$(I,1);
1353 PRINT " | ";:PRINT USING "\      \";FR$(I,2);:PRINT " | ";:PRINT USING "\   \";GD$(I,2);:PRINT " |";
1360 NEXT I
1400 REM               ***********************
1401 REM               *   MAIN EDITOR LOOP  *
1402 REM               *    IBM VERSION      *
1403 REM               ***********************
1404 REM*****  MAIN  **********************************************************
1410 SCREEN ,,0:LOCATE 17,1,0:PRINT:PRINT:PRINT:PRINT:PRINT:PRINT:KEY OFF
1420 KEY OFF
1430 FOR I=1 TO 10:KEY I,"":KEY(I) OFF:NEXT I
1440 LOCATE 25,1
1450 FOR I=1 TO 8
1460    PRINT USING "#";I;:COLOR 0,7:PRINT KEYNAM$(I,1);:COLOR 7,0:PRINT SPC(1)
1470 NEXT I
1475 LOCATE 25,71,0:PRINT "10";:COLOR 0,7:PRINT KEYNAM$(10,1);
1480 GOTO 1500
1491 CLS:SYSTEM
1500 F=2 : R=2 :FLAG(1)=1:FLAG(3)=0:REM ALLOW KEYS WITH NO CHECK
1505 REM*****  MAIN2  *********************************************************
1510 C=FLD(F)
1515 REM*****  KYSCN  *********************************************************
1520 LOCATE ,,0
1530 LOCATE R,C:X$=CHR$(SCREEN(R,C)):COLOR 0,7:Y$=X$:PRINT Y$;:COLOR 7,0
1560 XXX$=INKEY$:IF (XXX$="") AND (LEN(XXX$)<>2) THEN 1560 ELSE X=ASC(XXX$)
1562 IF LEN(XXX$)=1 THEN 1580 ELSE X=ASC(MID$(XXX$,2,1))-58
1563 IF X<1 OR (X>8 AND X<>10) THEN 1580
1565 ON X GOTO 6010,7010,4010,8010,3210,3410,3010,1491,1580,3600
1580 FLAG(1)=0:LOCATE R,C: PRINT X$;
1585 REM ***************************************************************
1590 IF LEN (XXX$) =1 THEN 1715 ELSE X=ASC(MID$(XXX$,2,1))
1591 IF (X<>72) AND (X<>75) AND (X<>77) AND (X<>80) THEN X=255:GOTO 1715:REM MAKE X BAD
1592 REM***********************************************************************
1593 REM           ROUTINE FOR HANDLING CURSOR MOVEMENT COMMANDS
1594 REM****  KYSCN1  *********************************************************
1595 IF FLAG(3) THEN GOSUB 105
1600 IF X=72 THEN R=CSRLIN -1 :FLAG(1)=1
1610 IF X=80 THEN R=CSRLIN +1 :FLAG(1)=1
1620 IF X=75 THEN F=F-1 :FLAG(1)=1
1630 IF X=77 THEN F=F+1 :FLAG(1)=1
1640 IF F>6 THEN R=R+1 : F=2
1650 IF F<1 THEN F=6 : R=R-1
1660 IF F<2 AND R<6 AND X=75 THEN F=6 : R=R-1
1670 IF R<16 THEN 1690
1680 IF F=1 THEN R=6 ELSE R=2
1690 IF R<6 AND F=1 THEN R=15
1700 IF R<2 THEN R=15
1710 IF FLAG(1) THEN 1510
1712 REM*****  KYSCN2  *********************************************************
1715 FLAG(1)=1:IF ((97=<X) AND (X=<122)) THEN X=X-32
1716 X$=CHR$(X)
1720   ON F GOTO 1730,2040,2080,2210,2080,2210 :REM MAIN JUMP FOR EACH FIELD
1730 IF X=13 THEN GOTO 1820
1740     IF (X$="C" OR X$="c") THEN GOTO 1770
1750 IF R<>8 AND R<>12 THEN 2500
1751   IF R=8 THEN Y=7 ELSE Y=2
1754   IF X$<"0" OR X$>"9" THEN BEEP : GOTO 1758
1755 FOR J=1 TO 7:FL$(R-1)=FL$(R-1)+CHR$(SCREEN(R,J+C)):NEXT J:LOCATE R,C+1:FL$(R-1)=MID$(FL$(R-1),1,Y)
1756   FL$(R-1)=RIGHT$(FL$(R-1),LEN(FL$(R-1))-1) + LEFT$(FL$(R-1),1)
1757   MID$(FL$(R-1),Y,1)=X$:IF R=12 AND VAL (FL$(R-1))>14 THEN FL$(R-1)=" "+X$
1758   LOCATE R,C+1 : PRINT FL$(R-1); : GOTO 1510 :REM GOTO MAIN2
1760 REM***  A 'C' HAS BEEN TYPED SO DO A CLEAR   ****************************
1770  ON R-5 GOTO 2500,2500,1780,2500,1790,1800,1810,2500,2500,2500
1780   FL$(7)="       " : GOTO 2030:REM GOTO CHNG1
1790   FL$(9)="    OFF" : GOTO 2030
1800   FL$(10)="0.0 SEC" : GOTO 2030
1810   FL$(11)="      1" : GOTO 2030
1815 REM***** PROCESS A 'CARRIAGE RETURN' FOR FIELD 1 *************************
1820  ON R-5 GOTO 2000,2002,1830,2004,1860,1900,1940,1970,2004,2004
1830 IF FL$(7)="       " THEN FL$(7)="      1" : GOTO 2030
1840     X14$="      "+STR$ (VAL (FL$(7))+1) : L=LEN (X14$)
1850     FL$(7)=MID$(X14$,L-6,7): GOTO 2030
1860 IF INSTR(FL$(9),"OFF")<>0 THEN FL$(9)="0"
1870    FL$(9)=MID$(STR$(VAL(FL$(9))+15),2)
1875    IF LEN(FL$(9))<3 THEN FOR I=1 TO 4-LEN(STR$(VAL(FL$(9)))):FL$(9)=" "+FL$(9):NEXT I
1880    IF VAL (FL$(9))>225 THEN FL$(9)="    OFF":GOTO 1890
1885    FL$(9) = FL$(9)+" SEC"
1890    GOTO 2030 :REM GOTO CHNG1
1900 FL$(10)=MID$(STR$(VAL(FL$(10))+.5),2)
1910    IF VAL (FL$(10))>7.5 THEN FL$(10)="0.0"
1920    IF FL$(10)=".5" THEN FL$(10)="0.5"
1930    IF LEN (FL$(10))=1 THEN FL$(10)=FL$(10)+".0"
1932    FL$(10)=FL$(10)+" SEC"
1935    GOTO 2030
1940 FL$(11)=STR$(VAL(FL$(11))+1)
1950    IF VAL (FL$(11))>14 THEN FL$(11)="      0" : GOTO 1940
1960    FOR I=1 TO 7-LEN(STR$(VAL(FL$(11)))):FL$(11)=" "+FL$(11):NEXT I
1965    GOTO 2030
1970 I=1: TEMP$=" "
1971 WHILE TEMP$=" "
1972    TEMP$=(MID$(FL$(12),I,1)):I=I+1
1973 WEND
1975 FL$(12)="      "+CHR$(ASC(TEMP$)+1)
1980    IF FL$(12)>"      D" THEN FL$(12)="      A"
1990    GOTO 2030
2000 IF INSTR(FL$(5),"VHF")<>0 THEN FL$(5)="    VHF" ELSE FL$(5) ="    VHF"
2001 GOTO 2020
2002 IF INSTR(FL$(6),"2")<>0 THEN FL$(6)="     14" ELSE FL$(6)="      2"
2003 GOTO 2020
2004 IF INSTR(FL$(R-1),"ON")<>0 THEN FL$(R-1)="    OFF" ELSE FL$(R-1)="     ON"
2020 IF FLAG(R) THEN FLAG(R)=0 ELSE FLAG(R)=1
2025 REM************IMPLEMENT CHANGE************************************
2030 LOCATE R,C+1 : PRINT FL$(R-1);+" ": GOTO 1510
2035 REM************   F2, PROCESS INPUT FOR FIELD 2  *************************
2040 IF X=32 THEN X=77 : GOTO 1595:REM GOTO KYSCN1
2045  IF (X$="Y" OR X$="y") THEN FLAG(R+14)=1: GOTO 2060:REM GOTO CHNG2
2050  IF (X$="N" OR X$="n") THEN FLAG(R+14)=0 ELSE 2500:REM 2500 IS BAD.
2055 REM***********  CHNG2  ********************************************
2060 LOCATE R,C : PRINT X$;: GOTO 1510:REM GOTO MAIN2.
2070 :REM**********  F3, PROCESS FOR FIELDS 3 AND 5 ***************************
2080 FLAG(4)=1
2100 REM*********** MOVE2 **********************************************
2110 IF X$="C" THEN 2370:REM GOTO FCLR
2120 IF X=32 THEN 2160:REM GOTO LINC :REM ON SPACEBAR, JUST INC.
2130 IF X=8 THEN 2270:REM GOTO BACK :REM BACKSPACE CHECK
2140 IF X<48 OR X>58 THEN 2500:REM GOTO BAD:REM BEEP IF NOT DECIMAL DIGIT
2145 REM************* PUT **********************************************
2150 LOCATE R,C : PRINT X$; : FLAG(3)=1
2155 REM*********  LINC  ***********************************************
2160 C=C+1 : LOCATE R,C : X$=CHR$(SCREEN(R,C)): IF X$="." THEN C=C+1
2170 IF C>FLD(F+1)-4 THEN X=77 : GOTO 1595  ELSE 1520
2195 REM
2200 REM************   F4, PROCESS INPUT FOR FIELDS 4 AND 6   ****************
2210 FLAG(4)=0: IF X$="D" THEN 2250:REM GOTO DCG
2220 IF X$<>"-" THEN 2110 ELSE 2150:REM THEN MOVE2 ELSE PUT
2230 LOCATE R,C : X$=CHR$(SCREEN(R,C)): IF X$="-" THEN X$=" " ELSE X$="-" : GOTO 2150:REM GOTO PUT
2240 :REM*********** DIGITAL CODE GUARD, DCG ***************************
2250 C=FLD(F) : LOCATE R,C : PRINT "D000 " ;: FLAG(3)=0 : GOTO 2160:REM GOTO LINC
2260 :REM********   BACKSPACE, BACK ************************************
2270 IF C=FLD(F) THEN 1520:REM THEN GOTO KYSCN
2280 C=C-1 : LOCATE R,C :X$=CHR$(SCREEN(R,C)): IF X$="." THEN C=C-1
2290 IF (X$="D" OR X$="d") THEN 2160 ELSE 1520:REM THEN LINC ELSE KYSCN
2330 :REM***************************************************************
2340 :REM                     CLEAR FIELD                              *
2350 :REM***************************************************************
2360 :REM**************  FCLR  *****************************************
2370 C=FLD(F) : LOCATE R,C
2390 IF FLAG(4) THEN PRINT "  0.0   "; ELSE PRINT "  0.0";
2400 FLAG(3)=0 : GOTO 1510 :REM GOTO MAIN2
2450 :REM***************  BEEP ON BAD KEYS, BAD ************************
2500 BEEP : GOTO 1520:REM GOTO KYSCN
3000 REM         ********************************************************
3001 REM         *                                                      *
3002 REM         *   HELP, "TONE GUARD," AND "DIGITAL GUARD" DISPLAYS   *
3003 REM         *                  IBM VERSION                         *
3004 REM         ********************************************************
3010 LOCATE 17,1
3020 PRINT "USE THE POINTER KEYS (UP, DOWN, LEFT, AND RIGHT) TO CHANGE FIELDS" SPC(14) " "
3030 COLOR 0,7:PRINT "BACKSPACE";:COLOR 7,0:PRINT " AND ";:COLOR 0,7: PRINT "SPACEBAR";:COLOR 7,0
3032 PRINT " MOVES THE CURSOR WITHOUT CHANGING VALUES." SPC(15) " "
3040 COLOR 0,7:PRINT "C";:COLOR 7,0: PRINT " CLEARS A FIELD" SPC(63) " "
3050 COLOR 0,7:PRINT "D";:COLOR 7,0: PRINT " CLEARS FOR A DIGITAL CODE GUARD ENTRY. USE ";
3055 COLOR 0,7:PRINT "-";:COLOR 7,0: PRINT " FOR DCG INVERSION" SPC(15) " "
3057 COLOR 0,7:PRINT "ENTER   ";:COLOR 7,0
3060 PRINT " TOGGLES LEFT SIDE (CH 0) FUNCTIONS SUCH AS BATTERY SAVER ON/OFF, ETC."
3070 PRINT SPC(79) " ":PRINT SPC(79) " ": LOCATE R,C : GOTO 1520 :REM GOTO KYSCN
3200 REM****  TONEGD***********************************************************
3210 LOCATE 17,1:PRINT "                       ";:COLOR 0,7
3215 PRINT "EIA STANDARD TONE GUARD FREQUENCIES";:COLOR 7,0:PRINT SPC(21) " ";
3220 PRINT "   <--------- GROUP A --------->   <--------- GROUP B --------->   GROUP C" SPC(5) " "
3230 PRINT USING "   ###.#"; 67,107.2,141.3,186.2,71.9,110.9,146.2,192.8,74.4;:PRINT "       "
3240 PRINT USING "   ###.#"; 77,114.8,151.4,203.5,82.5,118.8,156.7,210.7,79.7;:PRINT "       "
3250 PRINT USING "   ###.#"; 88.5,123,162.2,218.1,94.8,127.3,167.9,225.7,85.4;:PRINT "       "
3260 PRINT USING "   ###.#"; 100,131.8,173.8,233.6,103.5,136.5,179.9,241.8,91.5;:PRINT "       "
3270 LOCATE R,C : GOTO 1520:REM GOTO KYSCN
3280 REM
3300 REM
3400 REM****  DIGGRD **********************************************************
3410 LOCATE 17,1
3420 PRINT "                         ";:COLOR 0,7
3425 PRINT "SUGGESTED DIGITAL GUARD NUMBERS";:COLOR 7,0: PRINT "              632  723"
3430 PRINT USING "###  "; 23,43,71,115,134,162,223,251,306,346,411,445,506,606,654,731
3440 PRINT USING "###  "; 25,47,72,116,143,165,226,261,311,351,412,464,516,612,662,732
3450 PRINT USING "###  "; 26,51,73,125,152,172,243,263,315,364,423,465,532,624,664,734
3460 PRINT USING "###  "; 31,54,74,131,155,174,244,265,331,365,431,466,546,627,703,743
3470 PRINT USING "###  "; 32,65,114,132,156,205,245,271,343,371,432,503,565,631,712,754
3480 LOCATE R,C : GOTO 1520: REM GOTO KYSCN
3500 REM
3600 REM        ***********************************
3610 REM        *       CHANGE THE COM PORT       *
3620 REM        ***********************************
3640 IF KEYNAM$(10,1)=" COM2: " THEN
3650    KEYNAM$(10,1)=" COM1: "
3660    PORT$="COM2:"
3670 ELSE
3680     KEYNAM$(10,1)=" COM2: "
3690     PORT$="COM1:"
3700 END IF
3710 LOCATE 3,15,0:PRINT PORT$
3720 LOCATE 25,71,0:PRINT "10";:COLOR 0,7:PRINT KEYNAM$(10,1);
3730 LOCATE R,C
3800 GOTO 1520: REM GOTO KYSCN
4000 REM        ***************************************
4001 REM        *         DISK OPERATIONS             *
4002 REM        *  LOAD, STORE, AND DELETE FILES      *
4003 REM        *         IBM VERSION                 *
4004 REM        ***************************************
4005 REM***************  DISK  ************************************************
4010 CLS:KEY OFF :FOR N=1 TO 10:KEY(N) OFF: KEY N,"":NEXT N
4020 PRINT "CHOOSE DISK OPERATION:" : PRINT
4030 COLOR 0,7:PRINT "   DIR    ";:COLOR 7,0:PRINT "  SHOWS PRESENT DISK FILES"
4035 PRINT:COLOR 0,7
4040 PRINT "  LOAD    ";:COLOR 7,0:PRINT "  GETS FILE AND PUTS INTO IMAGE"
4045 PRINT:COLOR 0,7
4050 PRINT "  SAVE    ";:COLOR 7,0:PRINT "  STORES PRESENT IMAGE TO DISK"
4055 PRINT:COLOR 0,7
4060 PRINT "  DELETE  ";:COLOR 7,0:PRINT "  DELETES FILE FROM DISK" : PRINT
4070 COLOR 0,7:PRINT "   DRIVE ";:COLOR 7,0:PRINT "  CHANGES DRIVE NUMBER" :PRINT
4075 COLOR 0,7
4080 PRINT "   EDIT   ";:COLOR 7,0:PRINT "  GOES BACK TO MAIN PAGE " : PRINT
4090 COLOR 0,7:PRINT "   HELP   ";:COLOR 7,0:PRINT "  DISPLAYS THIS PAGE"
4100 PRINT:PRINT:PRINT:COLOR 0,7:PRINT "PRESENT DISK DRIVE IS ";DRIVE$:COLOR 7,0
4120 LOCATE 25,1,0
4130 FOR I=1 TO 7
4140    PRINT USING "#";I;:COLOR 0,7:PRINT KEYNAM$(I,3);:COLOR 7,0:PRINT SPC(1)
4150 NEXT I
4160 XXX$=INKEY$:IF (XXX$="") OR (LEN(XXX$)<>2) THEN 4160 ELSE X=ASC(MID$(XXX$,2,1))-58
4170 IF X<1 OR (X>7) THEN 4160
4180 ON X GOTO 4405,5010,4510,5310,5510,1310,4010
4400 REM****************** DIR ***********************************************
4405 GOSUB 4410 : GOTO 4120
4406 REM
4410 LOCATE 1,1:CLS:ON ERROR GOTO 5180:FILES DRIVE$+":*.FIL":ON ERROR GOTO 9010
4470 RETURN
4500 REM******************* SAVE FILE *****************************************
4510 CLS
4530 COLOR 0,7:PRINT "ENTER FILE NAME (UP TO 8 CHARACTERS),<ENTER>";:COLOR 7,0
4540 INPUT L$:IF L$="" THEN 4010
4545 IF LEN (L$)>8 THEN PRINT:PRINT:PRINT "TOO MANY CHARACTERS IN NAME":GOTO 4530
4550 CLS: PRINT "STORING DATA TO ";:COLOR 0,7:PRINT L$:COLOR 7,0:PRINT
4560 OPEN DRIVE$+":"+L$+".FIL" FOR OUTPUT AS #1
4570 FOR I=5 TO 14 : PRINT #1,USING "\      \"; FL$(I);: NEXT I : X=0
4580 FOR I=1 TO 14 : FOR J=1 TO 2 : PRINT# 1,USING "\      \"; FR$(I,J);:PRINT #1, USING "\   \";GD$(I,J);: NEXT J
4590 NEXT I
4592 X=0:FOR I=1 TO 8
4593      X=X+2^(I-1)*FLAG(I+15):NEXT I:PRINT #1, CHR$(X);
4596 X=0:FOR I=9 TO 14
4598      X=X+2^(I-9)*FLAG(I+15):NEXT I:PRINT #1, CHR$(X);
4600 FOR I=5 TO 8
4605 PRINT #1,CHR$(255 AND WD%(I));CHR$((WD%(I) AND 32512)/256+(WD%(I) AND -32768!)/(-256));:NEXT I
4610 CLOSE #1: GOTO 1310:REM GOTO MAIN
5000 REM******************** LOAD FILE ****************************************
5010 FFLG=3 :CLS
5020 COLOR 0,7:PRINT "ENTER GET DATA FILE NAME <ENTER>";:COLOR 7,0
5025 INPUT L$
5030 IF L$="" THEN 4010
5040 CLS:PRINT "GETTING DATA FROM ";:COLOR 0,7:PRINT L$:COLOR 7,0:PRINT
5050 GOSUB 5060: GOTO 1310:REM GOTO DISPLAY
5060 LINEE$(3)="NAME: "+L$ :ON ERROR GOTO 5180: OPEN DRIVE$+":"+L$+".FIL" FOR INPUT AS #1:ON ERROR GOTO 9010
5070 FOR I=5 TO 14 : FL$(I)= INPUT$ (8,#1): NEXT I
5080 FOR I=1 TO 14 : FOR J=1 TO 2 :FR$(I,J)=INPUT$ (8,#1):GD$(I,J)=INPUT$ (5,#1): NEXT J
5090 NEXT I : X=(ASC(INPUT$(1,#1)))+(ASC(INPUT$(1,#1))*256)
5100 FOR I=5 TO 8 :LSB=ASC(INPUT$(1,#1)):MSB=ASC(INPUT$(1,#1))
5105 WD%(I)=LSB+(127 AND MSB)*256 + (128 AND MSB)*(-128)+(128 AND MSB)*(-128): NEXT I
5110 FOR I=0 TO 13 : IF (2^I AND X) THEN FLAG(I+16)=1 ELSE FLAG(I+16)=0
5120 NEXT I : CLOSE #1: IF INSTR(FL$(5),"VHF")<>0 THEN FLAG(6)=1 ELSE FLAG(6)=0
5130 IF INSTR(FL$(6),"2")<>0 THEN FLAG(7)=0 ELSE FLAG(7)=1
5140 IF INSTR(FL$(8),"OFF")<>0 THEN FLAG(9)=0 ELSE FLAG(9)=1
5150 IF INSTR(FL$(13),"ON")<>0 THEN FLAG(14)=1 ELSE FLAG(14)=0
5160 IF INSTR(FL$(14),"ON")<>0 THEN FLAG(15)=1 ELSE FLAG(14)=0
5165 CLOSE #1
5170 RETURN
5180 PRINT "INVALID OR NONEXISTANT FILE":SOUND 32767,40:SOUND 32767,40:ON ERROR GOTO 9010:CLOSE:RESUME 5190
5190 ON ERROR GOTO 0:ON ERROR GOTO 9010:RETURN 4010
5300 REM****************** DELETE FILE ****************************************
5310 CLS:GOSUB 5320
5320 PRINT "ENTER NAME OF FILE TO DELETE <ENTER>: ";
5325 INPUT L$
5330 IF L$="" THEN GOTO 5350 :
5340 CLS : PRINT "DELETING FILE ";:COLOR 0,7:PRINT L$:COLOR 7,0:PRINT
5341 ON ERROR GOTO 5180: KILL DRIVE$+":"+L$+".FIL":ON ERROR GOTO 9010
5350 CLS : PRINT: PRINT : GOTO 4010
5500 REM***************** SPECIFY DRIVE ***************************************
5510 CLS
5520 COLOR 0,7:PRINT "SPECIFY DISK DRIVE 'A' THRU 'E' <ENTER>: ";:COLOR 7,0
5525 INPUT L$ : IF L$="" THEN 4010
5527 IF L$="A" OR L$="a" OR L$="B" OR L$="b" OR L$="C" OR L$="c" OR L$="D" OR L$="d" OR L$="E" OR L$="e" THEN 5530 ELSE CLS:PRINT "INVALID DISK DRIVE":GOTO 5520
5530 IF ASC(L$)>91 THEN L$=CHR$(ASC(L$)-32)
5535 DRIVE$=L$:CLS : GOTO 4010
6000 REM         ***************************************
6001 REM         *   DOWNLOAD FROM COMPUTER TO RADIO   *
6002 REM         *             IBM VERSION             *
6003 REM         *                                     *
6004 REM         ***************************************
6005 REM
6006 REM**** DWNLD ************************************************************
6010 FLAG(1)=0
6030 GOSUB 810:REM GOSUB WT
6050 GOSUB 510:REM GOSUB ICNV
6051 PRINT:PRINT "      WARNING!!!":PRINT:PRINT "ALTERING EEPROM LOCATIONS 4 THRU 7 MAY PREVENT RADIO OPERATION."
6052 INPUT "DO YOU WANT TO OVERWRITE THESE LOCATIONS (Y/N)",ANS$
6053 IF (ANS$="Y" OR ANS$="y") THEN 6056
6054 IF (ANS$="N" OR ANS$="n") THEN FLGPROT =1:GOTO 6060
6055 GOTO 6052
6056 INPUT "ARE YOU SURE (Y/N)",ANS$
6057 IF (ANS$="N" OR ANS$="n") THEN 6010:REM GO TO WT.
6058 IF (ANS$="Y" OR ANS$="y") THEN FLGPROT=0:GOTO 6060
6059 GOTO 6056
6060 FFLG=1 : GOSUB 710:REM GOSUB HOOK
6070 IF (PB AND 8) OR (PB AND 2) THEN FFLG=5 : GOSUB 9010:REM GOSUB FAIL
6080 IF (PB AND 1) THEN CC=64 ELSE CC=16
6090 IF ((PB AND 8)/8 XOR (FLAG (6)))-1 THEN FFLG=6 : GOSUB 9010:REM GOSUB FAIL
6095 IF FLAG(1) THEN GOSUB 9410:REM GOSUB GETID
6100 FOR I=1 TO CC
6105 IF (I=5) AND (FLGPROT=1) THEN I=9
6110  MSB=(WD%(I) AND 32512)/256 + (WD%(I) AND -32768!)/(-256): LSB=WD%(I) AND 255
6120  PRINT #1,CHR$( 63+I);CHR$(MSB);CHR$(LSB);:SOUND 31000,1
6125 SOUND 31000,1:IF LOC(1)<2 THEN GOSUB 9010 ELSE C=ASC(INPUT$(1,#1)):D=ASC (INPUT$(1,#1))
6130  IF FLAG(60)-1 THEN 6140
6135 SOUND 30000,1
6137 IF LOC(1)<3 THEN GOSUB 9010 ELSE X=ASC(INPUT$(1,#1)):Y=ASC(INPUT$(1,#1)):Z=ASC(INPUT$(1,#1)): GOTO 6150
6140  IF C<>MSB OR D<>LSB THEN FFLG=7 : GOSUB 9010 ELSE 6160:REM GOSUB FAIL
6150  IF C<>63+I OR D<>MSB OR X<>LSB OR Y<>MSB OR Z<>LSB THEN FFLG=7 : GOSUB 9010:REM GOSUB FAIL
6160 GOSUB 920: NEXT I : GOSUB 790:REM GOSUB 'UNHOOK'
6170 GOTO 1310:REM GOTO MAIN
7000 REM         *************************************
7001 REM         *   UPLOAD FROM RADIO TO COMPUTER   *
7002 REM         *           IBM VERSION             *
7003 REM         *************************************
7004 REM
7005 REM*** UPLOAD ************************************************************
7010 FLAG(1)= 1
7030 FOR I=1 TO 64 : WD%(I)=0 : NEXT I
7040 GOSUB 810 :REM GOSUB WT
7060 FFLG=2 : GOSUB 710 :REM GOSUB HOOK
7070 EE= (PB AND 12)/4 : CC= (PB AND 3) : SL= (PB AND 240)/16:PRINT PB
7080 IF CC>1 OR EE>1 THEN FFLG=5 : GOSUB 9010 :REM GOSUB FAIL
7090 FOR I=1 TO 48*CC+16 : PRINT #1,CHR$(127+I);
7100  IF FLAG (60)-1 THEN 7110
7105 SOUND 30000,1:SOUND 30000,1:SOUND 30000,1
7107 IF LOC(1)<3 THEN GOSUB 9010 ELSE  A=ASC(INPUT$(1,#1)): MSB%=ASC(INPUT$(1,#1)) : LSB%=ASC(INPUT$(1,#1)): GOTO 7120
7110  SOUND 30000,1:SOUND 30000,1:SOUND 30000,1:IF LOC(1)<2 THEN GOSUB 9010 ELSE MSB%=ASC(INPUT$(1,#1)):LSB%=ASC(INPUT$(1,#1))
7120  WD%(I)=LSB% + (127 AND MSB%)*256 + (128 AND MSB%)*(-128)+(128 AND MSB%)*(-128)
7130 GOSUB 920: NEXT I : GOSUB 790:GOSUB 210:GOTO 1310:REM BP,UNHOOK,CONVT,DISPLAY
8000 REM         ******************************
8001 REM         *   ADVANCED PROGRAMMING:    *
8002 REM         * INITIALIZE, PRINT, OPTIONS *
8003 REM         *       IBM VERSION          *
8004 REM         ******************************
8010 KEY OFF:FOR I=1 TO 10:KEY (I) OFF:KEY I,"":NEXT I:CLS
8020 PRINT "CHOOSE ADVANCED PROGRAMMING OPERATION:" : PRINT
8030 COLOR 0,7:PRINT "  PRINT   ";:COLOR 7,0:PRINT "  PRINTS OUT IMAGE MEMORY" :PRINT
8060 COLOR 0,7:PRINT " OPTIONS  ";:COLOR 7,0:PRINT "  CHANGES THE FOUR 16-BIT OPTION WORDS" : PRINT
8070 COLOR 0,7:PRINT "INITIALIZE";:COLOR 7,0:PRINT "  CLEARS IMAGE MEMORY" : PRINT
8080 COLOR 0,7:PRINT "   EDIT   ";:COLOR 7,0:PRINT "  GOES BACK TO MAIN PAGE" : PRINT
8090 COLOR 0,7:PRINT "   HELP   ";:COLOR 7,0:PRINT "  GIVES THIS PAGE (STOPS PRINTING)"
8100 GOSUB 8200:REM GOSUB ADKEYS
8110 XXX$=INKEY$:IF (XXX$="") OR (LEN(XXX$)<>2) THEN 8110 ELSE X=ASC(MID$(XXX$,2,1))-58
8112 IF X<1 OR (X>5) THEN 8110
8114 ON X GOTO 8310,8810,1100,1310,8010
8120 REM
8200 LOCATE 25,1,0
8210 FOR I=1 TO 5
8220    PRINT USING "#";I;:COLOR 0,7:PRINT KEYNAM$(I,4);:COLOR 7,0:PRINT SPC(1)
8230 NEXT I
8270 RETURN
8280 REM
8300 REM***** PRNT ***********
8310 CLS
8320 PRINT "PLEASE WAIT WHILE PRINTING" : LOCATE ,,0: GOSUB 8330 : GOTO 8010
8330 LPRINT:LPRINT:LPRINT:REM LPRINT CHR$ (27);"+l1L" :REM SO EPSON PAGES CORRECTLY
8340 LPRINT USING "\                            \"; TITL1$;:LPRINT " ";
8345 LPRINT "|CHAN|SCAN| RX FREQ  | RX CG | TX FREQ  | TX CG |"
8350 FOR I=1 TO 14 : F$="" : IF FLAG (I+15) THEN X$="Y" ELSE X$="N"
8360 IF I=1 THEN L$="         LMR EDITOR" ELSE L$=LINEE$(I)
8410 LPRINT USING "\                 \"; L$;:LPRINT "  ";
8411 LPRINT USING "\      \";FL$(I);:LPRINT "  ";:LPRINT "|";:LPRINT USING "###";I;:LPRINT  " |  ";
8412 LPRINT X$;" | ";:LPRINT USING "\      \";FR$(I,1);:LPRINT " | ";:LPRINT USING "\   \";GD$(I,1);
8413 LPRINT " | ";:LPRINT USING "\      \";FR$(I,2);:LPRINT " | ";:LPRINT USING "\   \";GD$(I,2);:LPRINT " |";
8420 NEXT I
8430 LPRINT : LPRINT : LPRINT : LPRINT : RETURN
8500 REM
8800 REM******** OPTION ****************
8810 CLS : PRINT "OPTION WORD #    WORD VALUE (HEX)"
8820 FOR I=1 TO 4:DTH=WD%(I+4):GOSUB 9700:PRINT SPC(6);I;SPC(10);"$";DTH$ : NEXT I
8830 R=2: C=21 :LOCATE R,C,0
8840 LOCATE R,C :X$=CHR$(SCREEN(R,C)) :COLOR 0,7:PRINT X$;:COLOR 7,0:LOCATE R,C
8850 XXX$=INKEY$:IF XXX$="" THEN 8850
8855 X=ASC(XXX$):IF ((97=<X) AND (X<=122)) THEN X=X-32
8860 IF X<48 OR X>57 AND X<65 OR X>70 AND X<>13 THEN BEEP : GOTO 8850
8870 IF X=13 THEN 8900 ELSE PRINT CHR$ (X); : C=C+1
8880 IF C=25 THEN 8910 ELSE 8840
8890 :REM
8900 REM LOCATE R,C :X$=CHR$(SCREEN(R,C)) : X$=CHR$ (ASC(X$)-128) : PRINT X$;
8910 LOCATE R,21 :X5$=CHR$(SCREEN(R,21))
8915 FOR J=1 TO 4:X5$=X5$+CHR$(SCREEN(R,J+21)):NEXT J
8920 X5$=MID$(X5$,1,4) :XXX$=MID$(X5$,1,1):GOSUB 9800
8922 WD%(R+3)=((XXX AND 8)/8)*(-32768!)+(XXX AND 7)*4096
8925 FOR J=2 TO 4:XXX$=MID$(X5$,J,1):GOSUB 9800:WD%(R+3)=WD%(R+3)+16^(4-J)*(XXX):NEXT J
8927 R=R+1:C=21:IF R<>6 THEN 8840
8930 GOTO 1310:REM GOTO MAIN
9000 REM              ***********************
9001 REM              *   ERROR HANDLER     *
9002 REM              *    IBM VERSION      *
9003 REM              ***********************
9009 FFLG=4
9010 IF FIXFLAG=1 GOTO 9350 ELSE CLOSE:FOR I=1 TO 10:KEY(I) OFF:NEXT I:CLS
9020 PRINT "                                 ";:COLOR 0,7:PRINT "ERROR":COLOR 7,0: LOCATE,,0
9030 BEEP:BEEP
9040 PRINT: PRINT "ERROR NUMBER   :  ";FFLG
9050 IF FFLG<4 THEN 9210
9060 IF FFLG<>4 THEN 9090 ELSE PRINT "  INTERFACE TIMEOUT ERROR"
9070 IF FLAG (3) THEN PRINT "  UP/DOWN LOAD NEVER ENGAGED" ELSE 9180
9080 PRINT "  CONNECTIONS, EEPROM, ETC MAY HAVE CAUSED FAILURE" : GOTO 9270
9090 IF FFLG<>5 THEN 9130 ELSE PRINT "  UNDEFINED PARAMETER BYTE ERROR"
9100 IF PB AND 8 THEN PRINT "  BAND BITS = 1"+STR$ (PB AND 4);" WHAT THE..."
9110 IF PB AND 1 THEN PRINT "  CHANNELS BITS = 1"+STR$ (PB AND 1);" HUH?"
9120 GOTO 9080
9130 IF FFLG<>6 THEN 9210 ELSE PRINT "  MISMATCHED BAND TYPES"
9140 IF FLAG (6) THEN X$="V" : Y$="U" ELSE Y$="V" : X$="U"
9150 PRINT "  EDITED ";X$;"HF TO ";Y$;"HF RADIO" : GOTO 9270
9170 PRINT "  READ OR WRITE ERROR DURING CLONING"
9180 DTH=I-1:GOSUB 9700:X5$=DTH$
9190 PRINT "  FAILURE DURING READ OR WRITE OF EEPROM WORD ";MID$(X5$,3,2) : GOTO 9080
9200 GOTO 9080
9210 PRINT "  ERROR CAUGHT BY 'ON ERROR' STATEMENT DURING ";
9220 IF FFLG=0 THEN PRINT "EDITING"
9230 IF FFLG=1 THEN PRINT "DOWNLOADING"
9240 IF FFLG=2 THEN PRINT "UPLOADING"
9250 PRINT "  REFERENCE ERROR NUMBER AND ERROR LINE IN PROGRAM LISTING FOR ASSISTANCE"
9260 PRINT "IBM ERROR NUMBER:  ";ERR  : PRINT "ERROR IN LINE  :  ";ERL
9270 PRINT : PRINT
9280 PRINT :COLOR 0,7:PRINT "   EDIT   ";:COLOR 7,0:PRINT "  RETURN TO LMR EDITOR"
9290 LOCATE 25,1,0:PRINT USING "#";1;:COLOR 0,7:PRINT KEYNAM$(1,5);:COLOR 7,0:PRINT SPC(1)
9312 XXX$=INKEY$:IF (XXX$="") OR (LEN(XXX$)<>2) THEN 9312 ELSE X=ASC(MID$(XXX$,2,1))-58
9315 IF X<>1 THEN 9312
9330 IF FFLG<4 THEN RESUME 1310 ELSE RETURN 1310
9350 FIXFLAG=0:RESUME 745
9400 REM           ************************************************
9401 REM           *  GET RADIO'S ID NUMBER PRIOR TO DOWNLOADING  *
9402 REM           *                 IBM VERSION                  *
9403 REM           *                                              *
9404 REM           *                                              *
9406 REM           ************************************************
9407 REM
9409 REM********************* GETID *******************************************
9410 FOR I=3 TO 4 : PRINT #1, CHR$(127+I);
9420  IF FLAG (60) THEN A=ASC(INPUT$(1,#1)):MSB=ASC(INPUT$(1,#1)):LSB=ASC(INPUT$(1,#1)): GOTO 9440
9430  MSB=ASC(INPUT$(1,#1)):LSB=ASC(INPUT$(1,#1))
9440  WD%(I)=LSB + (127 AND MSB)*256 + (128 AND MSB)*(-128)+(128 AND MSB)*(-128)
9450 GOSUB 920 : NEXT I:REM GOSUB BP
9460 DTH=WD%(3):GOSUB 9700:DTH1$=DTH$:DTH=WD%(4):GOSUB 9700:FL$(7)=DTH1$+DTH$
9462 FL$(7)=RIGHT$(FL$(7),7)+LEFT$(FL$(7),1):FL$(7)=MID$(FL$(7),1,7)
9470 FOR I=1 TO 7 : IF MID$(FL$(7),I,1)="F" THEN MID$(FL$(7),I,1)=" "
9480 NEXT I : RETURN
9600 REM             ********************
9601 REM             *    UTILITIES     *
9602 REM             *   IBM VERSION    *
9603 REM             ********************
9604 REM
9605 REM
9606 REM THIS UTILITY IS FOR EMULATING HP86 'AREAD' COMMAND.
9607 REM LENGTH OF WORD IS PASSED IN 'SIZE'; ROW = R; COL = FLD(F).
9610      XX$ = CHR$(SCREEN (R,FLD(F))): IF SIZE = 1 THEN 9650
9620      FOR J=1 TO (SIZE-1)
9630           XX$=XX$+CHR$(SCREEN(R,J+FLD(F)))
9640      NEXT J
9650      RETURN
9660 REM
9670 REM
9680 REM
9690 REM******** PERFORMS HP 'DTH$' FUNCTION **********************************
9700 DTH$=HEX$(DTH)
9705 IF LEN(DTH$)=4 THEN RETURN ELSE DTH$="0"+DTH$:GOTO 9705
9710 REM
9790 REM***** PERFORMS HP 'HTD (X$)' FUNCTION IF X$ IS ONE CHARACTER **********
9800 IF (65=<ASC(XXX$)) AND (ASC(XXX$)=<70) THEN XXX=ASC(XXX$)-55 ELSE XXX=ASC(XXX$)-48
9810 RETURN
9890 REM****** CONVERT FROM PRECISION TO INTEGER ******************************
9900 FOR I = 1 TO 64:IF WDS(I)=<32767 THEN WD%(I)=WDS(I) ELSE WD%(I)=WDS(I)-65536!
9910 NEXT I:RETURN
9940 REM****** CONVERT FROM INTEGER TO PRECISION ******************************
9950 FOR I=1 TO 64:IF WD%(I) <0 THEN WDS(I)=WD%(I) + 65536! ELSE WDS(I) = WD%(I)
9960 NEXT I:RETURN
9999 END
